/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
//tasks.register("hello") {
//    print("Hello world")
//}

//defaultTasks "hello"

task ("hello").doLast {
	println "Hello world1"
}

void sayHelloWorld() {
	println "Hello world2!"
}
sayHelloWorld()

def doubleIt(def i) {
	i * 3
	def y = i
}

println(doubleIt(3))

// types

// def == Object in java

// Strings
def s1 = "hello world"
print(s1)
def s2 = 'hello world'
print(s2)
def s3 = """ 
    A
    string
    on
    multiple
    lines
"""
println(s3)

// String interpolation
def x = 4
println "x is $x"
def myCourse = "gradle"
println("I'm training in: ${myCourse.toUpperCase()}")

// Properties
class Person {
	String theName
	Integer theAge

	Person(name, age) {
		this.theName = name
		this.theAge = age
	}

	def executeInside(Closure c) {
		c.delegate = this
		c()
	}
}

def p1 = new Person("Fred", 35)
println(p1.theAge)
p1.theAge = 36
println(p1.theAge)
println p1.theName
p1.executeInside { println theName }
println "======================"

// with a map
Map m = new HashMap()
m.put("foo", "Fred")
println m.get("foo")
m.foo = "Bill"
m.bar = "Bill1"
m.baz = "Bill2"
println m.get("foo")
println m.get("bar")
println m.get("baz")

// Closures

//def echoIt = { parameter ->
//    println parameter
//    parameter
//}

// Default only one parameter
//def echoIt = {
//    println it
//    it
//}

// Custom parameters
def echoIt = { a, b, c ->
	println a
	println b
	println c
	5
}

println echoIt("Hello world", "how r u?", "how old r u?")

// pass closures as parameters
def oneArgMethod(closure) {
	closure() * 2
}

def twoArgMethod(factor, closure) {
	closure() * factor
}

def i = oneArgMethod {
	def y = 3
	y * 2
}
println oneArgMethod { 10 }
twoArgMethod 2, { 10 }

// Closure resolution
class Person1 {
	String name = "Fred"
	Closure nameSayer = {
		println name
	}
}

def p2 = new Person1()
p2.nameSayer()
println("+===================")
logger.info("Hello")
println("+===================")

apply {
	println "Hello again!!"
}