/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
logger.info(">>> build.gradle: --> This is executed during the configuration phase  - timestamp @ ${project.gradle.timestamp()}")
logger.info(">>> build.gradle: --> ${gradle.gradleVersion}")
logger.info(">>> build.gradle: --> ${gradle.gradleHomeDir}")
logger.info(">>> build.gradle: --> ${gradle.gradleUserHomeDir}")

//logger.info(">>> build.gradle: $project.buildFile")
logger.info(">>> build.gradle: $buildFile")
//logger.info(">>> build.gradle: ${project.relativePath(project.buildFile)}")
logger.info(">>> build.gradle: ${relativePath(buildFile)}")

logger.info("""
*****************************************************************
Welcome to Gradle $gradle.gradleVersion - http://www.gradle.org
Gradle home is set to: $gradle.gradleHomeDir
Gradle user directory is set to: $gradle.gradleUserHomeDir

Base directory: $projectDir
Running script ${relativePath(buildFile)}
*****************************************************************
""")

logger.info("has property: ${project.gradle.hasProperty('gradleVersion')}")
logger.info("has property: ${hasProperty('projectDir')}")

if(project.hasProperty('gradlePropertiesProp')) {
    logger.info("The property file value is $gradlePropertiesProp")
} else {
    logger.info("Oops! gradlePropertiesProp can't be found")
}

// Extensions
project.ext.sayHello = "Hello from extensions"

if(hasProperty("sayHello")) {
    logger.info(sayHello)
} else {
    logger.info("Unable to say Hello!")
}